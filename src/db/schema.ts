// Generated by Drismify - Do not edit manually

import { sqliteTable } from 'drizzle-orm/sqlite-core';
import { text } from 'drizzle-orm/sqlite-core';
import { integer } from 'drizzle-orm/sqlite-core';
import { sql } from 'drizzle-orm';
import { relations } from 'drizzle-orm';

export type Role = 'USER' | 'ADMIN' | 'MODERATOR';

export type PostType = 'TEXT' | 'AUDIO' | 'VIDEO';

export const user = sqliteTable('user', {
  id: integer('id').primaryKey({ autoIncrement: true }),
  email: text('email').unique().notNull(),
  name: text('name'),
  active: integer('active', { mode: 'boolean' }).default(true).notNull(),
  // Field 'posts' of type 'Post[]' is a scalar list and needs special handling (e.g., JSON) or is a relation.
});

export const post = sqliteTable('post', {
  id: integer('id').primaryKey(),
  title: text('title').notNull(),
  published: integer('published', { mode: 'boolean' }),
  authorId: integer('author_id').references(() => user.id).notNull()
});

export const userRelations = relations(user, ({ one, many }) => ({
  posts: many(post)
}));

export const postRelations = relations(post, ({ one, many }) => ({
  author: one(user, {
    fields: [post.authorId],
    references: [user.id]
  })
}));
